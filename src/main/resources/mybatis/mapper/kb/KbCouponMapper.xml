<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kbcp.site.kb.coupon.mapper.KbCouponMapper">

    <!-- 상품 조회(상품 id) -->
    <select id="getGoodsEventByGoodsId" parameterType="hashMap" resultType="kbcp.site.kb.coupon.vo.GoodsEventVO">
        <!-- getGoodsEventByGoodsId -->
        select
            goods.goods_seq
            ,goods.default_yn
            ,event.event_seq
            ,event.event_id
        from goods goods
            left outer join event event on event.event_seq = goods.event_seq
        <where>
            goods.goods_id = #{goodsId} and event.corp_event_code = #{corpEventCode} and UPPER(goods.default_yn) = 'Y' and upper(delete_yn) = 'N';
        </where>
    </select>

    <!-- 당첨권 등록 -->
    <insert id="insertPrize" parameterType="kbcp.svc.vo.PrizeVO" useGeneratedKeys="true" keyProperty="prizeSeq">
        <!-- insertPrize -->
        insert into prize (
            event_seq,
            goods_seq,
            goods_id,
            tran_id,
            corp_code,
            customer_id,
            req_code,
            goods_id_no
        ) values (
            #{eventSeq},
            #{goodsSeq},
            #{goodsId},
            #{tranId},
            #{corpCode},
            #{customerId},
            #{reqCode},
            #{goodsIdNo}
        )
    </insert>

    <!--당첨권 조회(상품코드순번) -->
    <select id="getPrizeByGoodsIdNo" parameterType="String" resultType="kbcp.svc.vo.PrizeVO">
        <!-- getPrizeByGoodsIdNo -->
        select
            prize_seq
            ,event_seq
            ,customer_id
            ,corp_code
            ,goods_id
            ,tran_id
            ,status
        from prize
        <where>
            goods_id_no = #{goodsIdNo}
        </where>
        limit 1;
    </select>

    <!-- 이벤트 조회(이벤트 seq) -->
    <select id="getEventByEventSeq" parameterType="String" resultType="kbcp.svc.vo.EventVO">
        <!-- getEventByEventId -->
        select
            event_seq
            , event_id
            , member_id
            , event_name
            , expired_date
            , top_text
            , file_img_nm
            , file_img_path
            , file_img_key
            , caution
            , btn_nm
            , btn_color
            , create_time
            , create_user
            , update_time
            , update_user
        from event
        <where>
            event_seq = #{eventSeq}
        </where>
    </select>

    <!-- 상품 조회(이벤트 seq) -->
    <select id="getGoodsListByEventSeq" parameterType="String" resultType="kbcp.site.kb.coupon.vo.GoodsListVO">
        <!-- getGoodsListByEventSeq -->
        select
            goods.event_seq
            ,goods.goods_seq
            ,goods.goods_id
            ,goods.brand_name
            ,goods.goods_name
            ,goods.file_img_path
            ,goods.file_img_key
            ,goods.default_yn
            ,goods.goods_color
        from goods
        <where>
            goods.event_seq = #{eventSeq} and upper(delete_yn) = 'N'
        </where>
        order by goods.default_yn desc, goods.goods_ord asc;
    </select>

    <!-- 사용가능 쿠폰함 조회 -->
    <select id="getCouponBoxListAvail" parameterType="kbcp.site.kb.api.vo.KbReqCouponBoxVO" resultType="kbcp.site.kb.coupon.vo.CouponListVO">
        <!-- getCouponBoxAvail -->
        select
            prize.prize_seq
            ,prize.tran_id
            ,event.event_id
            ,prize.goods_id_no
            ,goods.goods_id
            ,goods.brand_name
            ,goods.goods_name
            ,goods.file_img_path
            ,goods.file_img_key
            ,goods.default_yn
            ,IF(prize.coupon_expired_date >= DATE_FORMAT(now(), '%Y%m%d'), 'N', 'Y') AS expired_yn
            ,prize.status
            ,(event.expired_date - DATEDIFF(now(), prize.create_time)) as run_date
            ,prize.coupon_expired_date
        from prize prize
            left outer join event event on event.event_seq = prize.event_seq
            left outer join goods goods on goods.goods_seq = prize.goods_seq
        <where>
            prize.create_time BETWEEN DATE_ADD(NOW(), INTERVAL -3 MONTH) AND NOW()
                and prize.customer_id = #{customer_id} and prize.corp_code = #{corp_code}
                and prize.status in ('0', '1', '3', '4')
        </where>
        order by prize.status, prize.create_time;
    </select>

    <!-- 쿠폰함 이력 조회 -->
    <select id="getCouponBoxListHistory" parameterType="kbcp.site.kb.coupon.vo.CouponInfoVO" resultType="kbcp.site.kb.coupon.vo.CouponListVO">
        <!-- getCouponBoxListHistory  -->
        select
            prize.prize_seq
            ,prize.tran_id
            ,prize.goods_id
            ,prize.goods_id_no
            ,event.event_id
            ,goods.brand_name
            ,goods.goods_name
            ,goods.file_img_path
            ,goods.file_img_key
            ,IF(prize.coupon_expired_date >= DATE_FORMAT(now(), '%Y%m%d'), 'N', 'Y') AS expired_yn
            ,prize.status
            ,prize.coupon_expired_date
        from prize prize
            left outer join event event on event.event_seq = prize.event_seq
            left outer join goods goods on goods.goods_seq = prize.goods_seq
        <where>
            prize.coupon_time BETWEEN DATE_ADD(NOW(), INTERVAL -3 MONTH) AND NOW()
                and prize.customer_id = #{customerId} and prize.corp_code = #{corpCode}
                and prize.status in ('2', '4')
        </where>
        order by prize.create_time desc;
    </select>

    <!-- 쿠폰정보 조회(쿠폰발급시) -->
    <select id="getPrizeByCouponInfo" parameterType="kbcp.site.kb.coupon.vo.CouponInfoVO" resultType="kbcp.site.kb.coupon.vo.PrizeGoodsVO">
        <!-- getPrizeByCouponInfo -->
        select
            prize.prize_seq
            ,prize.tran_id
            ,prize.status
            ,goods.goods_seq
            ,goods.goods_id
            ,goods.default_yn
            ,goods.statusUpdate_yn
            ,goods.expire_date
        from prize prize
            left outer join goods goods on goods.goods_seq = prize.goods_seq
        <where>
            prize.prize_seq = #{prizeSeq} and prize.corp_code = #{corpCode}
        </where>
    </select>

    <!-- 쿠폰상태 변경 -->
    <update id="updatePrizeStatus" parameterType="kbcp.svc.vo.PrizeVO">
        update prize
        <trim prefix="SET" suffixOverrides=",">
            status = #{status, jdbcType=CHAR},
            coupon_time = now(),
            run_batch = #{runBatch},
            <if test='goodsSeq != null and goodsSeq != ""'>
                goods_seq = #{goodsSeq},
            </if>
            <if test='goodsSeqBefore != null and goodsSeqBefore != ""'>
                goods_seq_before = #{goodsSeqBefore},
            </if>
            <if test='couponNum != null and couponNum != ""'>
                coupon_num = #{couponNum},
            </if>
            <if test='couponExpiredDate != null and couponExpiredDate != ""'>
                coupon_expired_date = #{couponExpiredDate},
            </if>
        </trim>
        <where>
            prize_seq = #{prizeSeq}
        </where>
    </update>

    <!-- 쿠폰 발급 이력 등록 -->
    <insert id="insertCoupon" parameterType="kbcp.svc.vo.CouponVO" useGeneratedKeys="true" keyProperty="couponSeq">
        <!-- insertCoupon -->
        insert into coupon (
            cmd
            ,prize_seq
            ,event_id
            ,tr_id
            ,member_id
            ,run_batch
            <if test='goodsId != null and goodsId != ""'>
                ,goods_id
            </if>
        ) values (
            #{cmd}
            ,#{prizeSeq}
            ,#{eventId}
            ,#{trId}
            ,#{memberId}
            ,#{runBatch}
            <if test='goodsId != null and goodsId != ""'>
                ,#{goodsId}
            </if>
        )
    </insert>

    <!-- 쿠폰상태 변경 -->
    <update id="updateCoupon" parameterType="kbcp.svc.vo.CouponVO">
        update coupon
        <trim prefix="SET" suffixOverrides=",">
            rsp_code = #{rspCode, jdbcType=CHAR},
            rsp_time = now(),
            <if test='couponNum != null and couponNum != ""'>
                coupon_num = #{couponNum, jdbcType=CHAR},
            </if>
            <if test='orderNum != null and orderNum != ""'>
                order_num = #{orderNum, jdbcType=CHAR},
            </if>
            <if test='rspMsg != null and rspMsg != ""'>
                rsp_msg = #{rspMsg, jdbcType=CHAR},
            </if>
        </trim>
        <where>
            coupon_seq = #{couponSeq}
        </where>
    </update>

    <!-- 쿠폰정보 상세조회(쿠폰상세조회시) -->
    <select id="getCouponDetailByTranId" parameterType="String" resultType="kbcp.site.kb.coupon.vo.RspGetCouponDetailAdd">
        <!-- getCouponDetailByTranId -->
        select
            DATE_FORMAT(prize.create_time, '%Y.%m.%d') as mod_date
            ,prize.run_batch
            ,prize.status
            ,goods.bacode_yn
            ,goods.brand_name
            ,goods.goods_name
            ,goods_before.brand_name as before_brand
            ,goods_before.goods_name as before_goods
        from prize prize
            left outer join goods goods on goods.goods_seq = prize.goods_seq
            left outer join goods goods_before on goods_before.goods_seq = prize.goods_seq_before
        <where>
            prize.tran_id = #{tranId}
        </where>
        limit 1;
    </select>

    <!-- 상품 조회(상품 seq) -->
    <select id="getGoodsByGoodsSeq" parameterType="String" resultType="kbcp.svc.vo.GoodsVO">
        <!-- getGoodsByGoodsSeq -->
        select
            goods_seq
            ,goods_id
            ,statusUpdate_yn
            ,expire_date
        from goods
        <where>
            goods_seq = #{goodsSeq}
        </where>
    </select>

</mapper>